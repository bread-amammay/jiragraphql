# @genqlient(omitempty: true)
# SearchForTeams will search for teams in the organization, this is a paginated query
query SearchForTeams(
    $organizationId: ID!
    $siteId: String!
    $first: Int!
    $query: String!
    $sortBy: [TeamSort]
    $teamAfter: String
) {
    team {
        teamSearchV2(
            organizationId: $organizationId
            siteId: $siteId
            first: $first
            sortBy: $sortBy
            after: $teamAfter
            filter: { query: $query }
        ) @optIn(to: "Team-search-v2") {
            pageInfo {
                hasNextPage
                hasPreviousPage
                startCursor
                endCursor
            }
            nodes {
                memberCount
                team {
                    id
                    organizationId
                    state
                    displayName
                    description
                }
            }
        }
    }
}

# Just like SearchForTeams, but also embeds the members of the teams
query SearchForTeamsEmbedMembers(
    $organizationId: ID!
    $siteId: String!
    $first: Int!
    $query: String!
    $sortBy: [TeamSort]
    $teamMemberAfter: String
    $teamAfter: String
) {
    team {
        teamSearchV2(
            organizationId: $organizationId
            siteId: $siteId
            first: $first
            sortBy: $sortBy
            after: $teamAfter
            filter: { query: $query }
        ) @optIn(to: "Team-search-v2") {
            pageInfo {
                hasNextPage
                hasPreviousPage
                startCursor
                endCursor
            }
            nodes {
                memberCount
                team {
                    id
                    organizationId
                    state
                    displayName
                    description
                    members(first: $first, after: $teamMemberAfter) {
                        pageInfo {
                            hasNextPage
                            hasPreviousPage
                            startCursor
                            endCursor
                        }
                        nodes {
                            state
                            role
                            member {
                                ... on AtlassianAccountUser {
                                    email
                                }
                                id
                                accountStatus
                                name
                                accountId
                            }
                        }
                    }
                }
            }
        }
    }
}

# ListTeamsThatContainMember will list all teams that contain a specific member
query ListTeamsThatContainMember(
    $organizationId: ID!
    $siteId: String!
    $first: Int
    $sortBy: [TeamSort]
    $teamAfter: String
    $filterByMember: ID!
) {
    team {
        teamSearchV2(
            organizationId: $organizationId
            siteId: $siteId
            first: $first
            sortBy: $sortBy
            after: $teamAfter
            filter: { membership: { memberIds: [$filterByMember] } }
        ) @optIn(to: "Team-search-v2") {
            pageInfo {
                hasNextPage
                hasPreviousPage
                startCursor
                endCursor
            }
            nodes {
                memberCount
                team {
                    id
                    organizationId
                    state
                    displayName
                    description
                }
            }
        }
    }
}

# FindTeamByID will query for a specific team
query FindTeamByID($siteId: String!, $query: ID!) {
    team {
        teamV2(id: $query, siteId: $siteId) @optIn(to: "Team-v2") {
            id
            displayName
        }
    }
}

